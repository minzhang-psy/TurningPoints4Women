---
title: "extra"
author: "JP"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Data

```{r}
library(tidyverse)

source("C:/Users/cpppe/Desktop/github_projects/TurningPoints4Women/functions/codebook_fun.R")


# no bio data now has a P831 and P831B - JP
no_bio <- read_csv("do_not_push/no_bio_data.csv") %>%
  filter(
    id != 'AG400',
    id != 'K000',
    id != 'F000',
    id != 'P100',
    id != '65973269'
  )


# keeping the bio data separate, but if you'd like to join them; `full_join(no_bio, bio, by = "id")` can be used
bio <- read_csv("do_not_push/bio_data.csv") %>%
  filter(
    id != 'AG400',
    id != 'K000',
    id != 'F000',
    id != 'P100',
    id != '65973269'
  )


# removing doubles of p831 from data
p831_inter <- no_bio %>%
  filter(id == 'P831') %>%
  filter(assessment_screen == '11/30/2021')

no_bio <-
  no_bio %>%
  filter(id != 'P831')

no_bio <-
  full_join(no_bio, p831_inter)

# bio data has a double (HR171) -JP
bio %>%
  count(id) %>%
  filter(n > 1)
```

## Attachment Relationships Questionnaire (ARQ)

```{r, include = FALSE}
arq <- no_bio %>%
  select(
    id,
    rq1:rqd
  ) %>%
  mutate(
    rq1 = case_when(
      rq1 == 5 ~ -77,
      rq1 == 6 ~ NA_real_,
      TRUE ~ rq1
    ),
    across(
      c(
        rqa,
        rqb,
        rqc,
        rqd
      ),
      ~case_when(
        .x == 8 ~ -77,
        .x == 9 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

arq_calc <-
  arq %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### ARQ Description

-   Variables in ARQ

    -   `rq1`, `rqa`, `rqb`, `rqc`, `rqd`

-   Variable Scale

    -   `rq1`

        -   A - It is easy for me to become emotionally close to others. I am comfortable dependingon them and having them depend on me. I don't worry about being alone or havingothers not accept me.

        -   B - I am uncomfortable getting close to others. I want emotionally close relationships, but Ifind it difficult to trust others completely, or to depend on them. I worry that I will be hurt ifI allow myself to become too close to others.

        -   C - I want to be completely emotionally intimate with others, but I often find that others arereluctant to get as close as I would like. I am uncomfortable being without closerelationships, but I sometimes worry that others don't value me as much as I value them.

        -   D - I am comfortable without close emotional relationships. It is very important to me tofeel independent and self-sufficient, and I prefer not to depend on others or have othersdepend on me.

    -   `rqa` - `rdq`

        -   1 - "Disagree Strongly"

        -   2 -

        -   3 -

        -   4 - "Neutral/Mixed"

        -   5 -

        -   6 -

        -   7 - "Agree Strongly"

-   Attachment Groups

    -   Secure

    -   Dismissing

    -   Preoccupied

    -   Fearful

-   Missing Data Rule:

    -   Applied. Calculations were completed for participants with 33% or less missing data (this includes `-77` responses)

-   Reference: @bartholomew1991attachment

    -   \[Link here\](https://psycnet.apa.org/record/1991-33075-001)

    -   \[DOI here\]([https://doi.org/10.1037/0022-3514.61.2.226](https://psycnet.apa.org/doi/10.1037/0022-3514.61.2.226))

### ARQ Missing Data

```{r}
arq_miss <- arq %>%
  pct_miss_fun(
    id = "id",
    n_items = 5
  )

arq_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = "ARQ Missing Data",
    subtitle = "By Participant"
  )

arq_remove <- arq_miss %>% filter(miss_pct > 33) %>% pull(id)
```

### ARQ Item Distributions

```{r}
map2(
  arq_calc %>%
    filter(!id %in% arq_remove) %>%
    select(-id) %>%
    drop_na(),
  arq_calc %>%
    filter(!id %in% arq_remove) %>%
    select(-id) %>%
    drop_na() %>%
    names(),
  ~ggplot(
    arq_calc %>%
      filter(!id %in% arq_remove) %>%
      select(-id) %>%
      drop_na(),
    aes(
      as.factor(.x)
    )
  ) +
    geom_bar(
      color = "white"
    ) +
    coord_flip() +
    labs(
      title = glue::glue(
        "Distribution for {.y}"
      ),
      x = glue::glue(
        "{.y}"
      )
    )
)
```

## Posttraumatic Risk Seeking Scale (PRSS)

```{r}
prss <- no_bio %>%
  select(
    id,
    ps9:ps13
  ) %>%
  subtract_scale(
    id = "id",
    value = 1
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 5 ~ -77,
        .x == 6 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

prss_calc <-
  prss %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### PRSS Description

-   Variables for PRSS scale

    -   `ps9`, `ps10`, `ps11`, `ps12`, `ps13`

-   Variable Scale

    -   0 - "None of the time"

    -   1 - "A little of the time"

    -   2 - "Some of the time"

    -   3 - "Much of the time"

    -   4 - "Most of the time"

-   Total scores ranged from `0` to `16`

-   Missing Data Rule:

    -   Applied. Calculations were completed for participants with 33% or less missing data (this includes `-77` responses)

-   Reference: @kerig2019linking

    -   \[Link here\](https://onlinelibrary.wiley.com/doi/abs/10.1111/cpsp.12280)

    -   \[DOI here\](**https://doi.org/10.1111/cpsp.12280**)

### PRSS Missing Data

```{r}
prss_miss <- prss %>%
  pct_miss_fun(
    id = "id",
    n_items = 5
  )

prss_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = 'PRSS Missing Data',
    subtitle = 'By Participant'
  )

prss_remove <- prss_miss %>% filter(miss_pct >= 33) %>% pull(id)
```

### PRSS Scale Distribution

```{r}
prss_complete <-
  prss_calc %>%
  composite_total_avg_fun(
    id = 'id',
    max_value = 5,
    n_items = 5
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  rename(
    prss_total = sum_values,
    prss_avg = mean_values
  ) %>%
  mutate(
    across(
      c(
        prss_total,
        prss_avg
      ),
      ~case_when(
        id %in% prss_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

prss_complete %>%
  composite_hist(
    x = prss_avg
  ) +
  labs(title = "Distribution of Average Scores for the PRSS")

```

### PRSS Internal Reliability

```{r}
prss_alpha <- prss_complete %>% 
  select(ps9:ps13) %>% 
  psych::alpha(check.keys = TRUE)

prss_alpha_table <- tibble(
  Scale = "Posttraumatic Risk Seeking Scale",
  Alpha = round(prss_alpha$total$raw_alpha, 3)
)

prss_alpha_table %>% 
  gt::gt() %>% 
  gt::tab_header(
    title = 'Alpha Values for PRSS Scale'
  )
```

## Stigma & Shame Questionnaire (SSQ)

```{r}
ssq <- no_bio %>%
  select(
  id,
  ps1:ps8
) %>%
  subtract_scale(
    id = "id",
    value = 1
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 5 ~ -77,
        .x == 6 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

ssq_calc <-
  ssq %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### SSQ Description

-   Variables in SSQ

    -   `ps1`, `ps2`, `ps3`, `ps4`, `ps5`, `ps6`, `ps7`, `ps8`

-   Variable Scale

    -   0 - "None of the time"

    -   1 - "A little of time"

    -   2 - "Some of the time"

    -   3 - "Much of the time"

    -   4 - "Most of the time"

-   Missing Data Rule:

    -   Applied. Calculations were completed for participants with 30% or less missing data (this includes `-77` responses)

-   Reference: @feiring2005persistence

    -   \[Link here\](https://journals.sagepub.com/doi/abs/10.1177/1077559505276686)

    -   \[DOI here\](**https://doi.org/10.1177/1077559505276686**)

### SSQ Missing Data

```{r}
ssq_miss <- ssq %>%
  pct_miss_fun(
    id = "id",
    n_items = 8
  )

ssq_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = "SSQ Missing Data",
    subtitle = "By Participant"
  )

ssq_remove <- ssq_miss %>% filter(miss_pct >= 30) %>% pull(id)
```

### SSQ Distribution

```{r}
ssq_complete <-
  ssq_calc %>%
  subscale_create(
    total_only = TRUE,
    scale1 = c("ps1", "ps2", "ps3", "ps4"),
    scale1_nitems = 4,
    scale2 = c("ps1", "ps2", "ps3", "ps4",
               "ps5", "ps6", "ps7", "ps8"),
    scale2_nitems = 8
  ) %>%
  rename(
    ssq_abuse_shame = total1,
    ssq_total = total2
  ) %>%
  mutate(
    across(
      c(
        ssq_abuse_shame,
        ssq_total
      ),
      ~case_when(
        id %in% ssq_remove ~ NA_real_,
        TRUE ~ .x
      )
    ),
    ssq_total_cutoff = case_when(
      ssq_total >= 16 ~ "high shame",
      ssq_total <= 15 ~ "low shame"
    )
  )

ssq_complete %>%
  composite_hist(
    x = ssq_total
  ) +
  labs(title = "Distribution of Total Scores for the Stigma & Shame Questionnaire")

```

### SSQ Cutoff

```{r}
ssq_complete %>% 
  cutoff_plot(
    x = ssq_total,
    cutoff = 16
  ) +
  labs(
    title = "Cutoff Scores for SSQ Total Scores",
    caption = "Cutoff is 16\nSee reference for literature on cutoff score."
  )

ssq_complete %>% 
  cutoff_plot(
    x = ssq_abuse_shame,
    cutoff = 3
  ) +
  labs(
    title = "Cutoff Scores for SSQ Abuse-related Shame Scores",
    caption = "Cutoff is 3\nSee reference for literature on cutoff score."
  )
```

### SSQ Internal Reliability

```{r}
ssq_abuse_shame_alpha <- ssq_complete %>% 
  select(
    ps1:ps4
  ) %>% 
  psych::alpha(check.keys = TRUE)

ssq_alpha <- ssq_complete %>% 
  select(
    ps1:ps8
  ) %>% 
  psych::alpha(check.keys = TRUE)

ssq_alpha_table <- tibble(
  Scale = c(
    "SSQ",
    "SSQ - Abuse-related Shame"
  ),
  Alpha = c(
    round(ssq_alpha$total$raw_alpha, 3),
    round(ssq_abuse_shame_alpha$total$raw_alpha, 3)
  )
)

ssq_alpha_table %>%
  gt::gt() %>%
  gt::tab_header(
    title = 'Alpha Values for SSQ Entire Scale & Subscales'
  )
```

## Elliott Delinquency Scale (EDS)

```{r}
elf <-
  no_bio %>%
  select(
    id,
    matches(
      "^elf"
    )
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 1 ~ 4,
        .x == 2 ~ 3,
        .x == 3 ~ 2,
        .x == 4 ~ 1,
        .x == 5 ~ 0,
        .x == 6 ~ 0,
        .x == 7 ~ -77,
        .x == 8 ~ NA_real_,
        TRUE ~ NA_real_
      ),
      .names = "{.col}_c"
    )
  )

elf_calc <-
  elf %>%
  mutate(
    across(
      .cols = -c(
        id,
        matches("//d$")
      ),
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### EDS Description

-   Variables for EDS

    -   `elf1`, `elf2`, `elf3`, `elf4`, `elf5`, `elf6`, `elf7`, `elf8`, `elf9`, `elf10`, `elf11`, `elf12`, `elf13`, `elf14`, `elf15`, `elf16`, `elf17`, `elf18`, `elf19`, `elf20`, `elf21`, `elf22`, `elf23`, `elf24`, `elf25`, `elf26`, `elf27`, `elf28`, `elf29`, `elf30`, `elf31`, `elf32`, `elf33`, `elf34`, `elf35`, `elf36`, `elf37`, `elf38`, `elf39`

-   Variable Scale

    -   Original Scale

        -   1 - "All"

        -   2 - "Most"

        -   3 - "Some"

        -   4 - "Very Few"

        -   5 - "None"

        -   6 - "Does not apply"

        -   -77 - "Decline to Answer"

-   Total score should range from 39 to 195

-   All 39 items were reverse scored

    -   Modified Scale

        -   0 - "Does not apply"

        -   1 - "None"

        -   2 - "Very Few"

        -   3 - "Some"

        -   4 - "Most"

        -   5 - "All"

        -   -77 - "Decline to Answer"

-   Missing Data Rule:

    -   Applied. Calculations were completed for participants with 20% or less missing data (this includes `-77` responses).

-   Reference: @elliott1985explaining

    -   [Link here](https://agris.fao.org/agris-search/search.do?recordID=US201300630571)

    -   ISBN Number: 0803924046

### ELF Missing Data

```{r}
elf_miss <- elf %>%
  select(
    id,
    matches(
      "_c$"
    )
  ) %>%
  pct_miss_fun(
    id = "id",
    n_items = 39
  )

elf_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = "EDS Missing Data",
    subtitle = "By Participant"
  )

elf_remove <- elf_miss %>% filter(miss_pct >= 20) %>% pull(id)
```

### ELF Scale Distribution

```{r}
elf_complete <-
  elf_calc %>%
  select(
    id,
    matches(
      "_c$"
    )
  ) %>%
  composite_total_avg_fun(
    id = c(
      'id', "elf1_c", "elf2_c", "elf3_c", "elf7_c",
      "elf12_c", "elf13_c", "elf15_c", "elf17_c", "elf18_c",
      "elf19_c", "elf23_c", "elf26_c", "elf28_c", "elf30_c",
      "elf34_c", "elf35_c", "elf36_c", "elf37_c"
    ),
    max_value = 4,
    n_items = 21
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  rename(
    elf_total = sum_values,
    elf_avg = mean_values
  ) %>%
  mutate(
    mutate(
      across(
        c(
          elf_total,
          elf_avg
        ),
        ~case_when(
          id %in% elf_remove ~ NA_real_,
          TRUE ~ .x
        )
      )
    )
  )

elf_complete %>%
 composite_hist(
   x = elf_total
 ) +
 labs(title = 'Distribution of Total Scores for Elliott Peer Delinquency Scale')
```

### ELF Internal Reliability

```{r}
elf_alpha <- elf_complete %>% 
  select(
    matches(
      "_c$"
    )
  ) %>%
  drop_na() %>% 
  psych::alpha(
    check.keys = TRUE
  )

elf_alpha_table <- tibble(
  Scale = "Elliott Peer Delinquency Scale",
  Alpha = round(elf_alpha$total$raw_alpha, 3)
)

elf_alpha_table %>% 
  gt::gt() %>% 
  gt::tab_header(
    title = "Alpha Values for Elliott Peer Delinquency Scale"
  )
```

## Elliott Self-Report Delinquency Scale

```{r}
ell <-
  no_bio %>%
  select(
    id,
    ell1:ell39a
  ) %>%
  rename(
    ell35a  = x35a
  ) %>%
  mutate(
    across(
      matches("a$"),
      ~case_when(
        .x == 7 ~ -77,
        .x == 8 ~ NA_real_,
        is.na(.x) ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

ell_calc <-
  ell %>%
  select(
    id,
    matches("a$")
  ) %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    ),
    across(
      -id,
      .names = "{.col}a"
    ),
    across(
      c(
        matches("a$"),
        matches("aa$")
      ),
      ~case_when(
        .x == 1 ~ 0,
        .x == 2 ~ 1,
        .x == 3 ~ 2,
        .x == 4 ~ 3,
        .x == 5 ~ 4,
        .x == 6 ~ 5,
        .x == 7 ~ -77,
        .x == 8 ~ NA_real_,
        TRUE ~ NA_real_
      )
    ),
    across(
      c(
        matches("aa$")
      ),
      ~case_when(
        .x >= 4 ~ 4,
        TRUE ~ .x
      )
    )
  )

ell_count_calc <-
  ell %>%
  select(
    id,
    matches("\\d$")
    ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 0 ~ 0,
        .x > 0 ~ 1,
        .x == -77 ~ NA_real_,
        TRUE ~ NA_real_
      )
    )
  )
```

### ELL Description

-   Variables for ELL Scale

    -   `ell1`, `ell2`, `ell3`, `ell4`, `ell5`, `ell6`, `ell7`, `ell8`, `ell9`, `ell10`, `ell11`, `ell12`, `ell13`, `ell14`, `ell15`, `ell16`, `ell17`, `ell18`, `ell19`, `ell20`, `ell21`, `ell22`, `ell23`, `ell24`, `ell25`, `ell26`, `ell27`, `ell28`, `ell29`, `ell30`, `ell31`, `ell32`, `ell33`, `ell34`, `ell35`, `ell36`, `ell37`, `ell38`, `ell39`

-   Items above are open ended and responses are how many times a behavior has been done in the last 6 months

    -   `ell1a`, `ell2a`, `ell3a`, `ell4a`, `ell5a`, `ell6a`, `ell7a`, `ell8a`, `ell9a`, `ell10a`, `ell11a`, `ell12a`, `ell13a`, `ell14a`, `ell15a`, `ell16a`, `ell17a`, `ell18a`, `ell19a`, `ell20a`, `ell21a`, `ell22a`, `ell23a`, `ell24a`, `ell25a`, `ell26a`, `ell27a`, `ell28a`, `ell29a`, `ell30a`, `ell31a`, `ell32a`, `ell33a`, `ell34a`, `ell35a`, `ell36a`, `ell37a`, `ell38a`, `ell39a`

    -   Variable Scale (for variables that end with `a`) and for any item that has been done 10 or more times

        -   1 - "Once a month"

        -   2 - "Once every 2-3 weeks"

        -   3 - "Once a week"

        -   4 - "2-3 times a week"

        -   5 - "Once a day"

        -   6 - "2-3 times a day"

        -   -77 - "Decline to Answer"

-   Missing Data Rule:

    -   Applied. Calculations were completed for participants with 20% or less missing data (this includes `-77` responses).

-   Reference: @elliott1985explaining

    -   [Link here](https://agris.fao.org/agris-search/search.do?recordID=US201300630571)

    -   ISBN Number: 0803924046

### ELL Count Missing Data

```{r}
# most participants will respond to the first part of each item
# don't respond to anything on the scale
ell_count_miss <- ell_count_calc %>%
  pct_miss_fun(
    id = "id",
    n_items = 39
  )

ell_count_miss %>%
  gt::gt() %>%
  gt::tab_header(title = 'Missing Data',
                 subtitle = 'By Each Participant')

ell_count_remove <- ell_count_miss %>% filter(miss_pct >= 20) %>% pull(id)

```

```{r}
ell_complete <-
  ell_calc %>%
  subscale_create(
    total_only = TRUE,
    scale1 = c(
      "ell4a", "ell5a", "ell6a", "ell8a", "ell9a",
      "ell10a", "ell11a", "ell14a", "ell16a", "ell20a",
      "ell21a", "ell22a", "ell24a", "ell25a", "ell27a", "ell29a",
      "ell31a", "ell32a", "ell33a", "ell38a", "ell39a"
    ),
    scale2 = c(
      "ell4aa", "ell5aa", "ell6aa", "ell8aa", "ell9aa",
      "ell10aa", "ell11aa", "ell14aa", "ell16aa", "ell20aa",
      "ell21aa", "ell22aa", "ell24aa", "ell25aa", "ell27aa", "ell29aa",
      "ell31aa", "ell32aa", "ell33aa", "ell38aa", "ell39aa"
    )
  ) %>%
  rename(
    ell_raw_total = total1,
    ell_censor_total = total2
  )


ell_count_complete <-
  ell_count_calc %>%
  composite_total_avg_fun(
    id = c(
      'id', "ell1", "ell2", "ell3", "ell7",
      "ell12", "ell13", "ell15", "ell17", "ell18",
      "ell19", "ell23", "ell26", "ell28", "ell30",
      "ell34", "ell35", "ell36", "ell37"
    ),
    max_value = 1,
    n_items = 21
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  rename(
    ell_count_total = sum_values,
    ell_count_avg = mean_values
  ) %>%
  mutate(
    across(
      c(
        ell_count_total,
        ell_count_avg
      ),
      ~case_when(
        id %in% ell_count_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### ELL Scale & Subscale Distributions

```{r}
ell_complete %>%
  composite_hist(
    x = ell_raw_total
  ) +
  labs(title = 'Distribution of Total Scores for Elliott Self Delinquency Scale (Raw)')

ell_complete %>%
  composite_hist(
    x = ell_censor_total
  ) +
  labs(title = 'Distribution of Total Scores for Elliott Self Delinquency Scale (Censored)')

ell_count_complete %>%
  composite_hist(
    x = ell_count_total
  ) +
  labs(title = "Distribution of Total Scores for Elliott Self Delinquency Scale (Binary Count Data)")
```

## Mental Health Continuum - SF

```{r}
mhc <-
  no_bio %>%
  select(
    id,
    matches(
      "^h"
    )
  )

mhc <-
  mhc %>%
  subtract_scale(
    id = 'id',
    value = 1
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 6 ~ -77,
        .x == 7 ~ NA_real_,
        is.na(.x) ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

mhc_calc <-
  mhc %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### MHC - SF Description

-   Variables for MHC-SF Scale

    -   `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `h7`, `h8`, `h9`, `h10`, `h11`, `h12`, `h13`, `h14`

-   Variable Scale

    -   0 - "Never"

    -   1 - "Once or Twice"

    -   2 - "About Once A Week"

    -   3 - "About 2 or 3 Times A Week"

    -   4 - "Almost Every Day"

    -   5 - "Every Day"

-   Total scores should range from 0 to 70

-   Missing Data Rule

    -   Applied. Calculations were completed only with participants that had less than 20% missing data (this includes `-77` responses)

<!-- -->

-   Reference: @keyes2009brief

-   Additional references:

    -   @lamers2011evaluating

    -   \[Evaluating the Psychometric Properties of the Mental Health Continuum-Short Form (MHC-SF)\](https://onlinelibrary.wiley.com/doi/abs/10.1002/jclp.20741)

        -   \[DOI here\](**https://doi.org/10.1002/jclp.20741**)

### MHC-SF Missing Data

```{r}
mhc_miss <- mhc %>%
  pct_miss_fun(
    id = "id",
    n_items = 14
  )

mhc_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = 'Missing Data',
    subtitle = 'By Each Participant'
  )

mhc_remove <- mhc_miss %>% filter(miss_pct >= 20) %>% pull(id)
```

### MHC-SF Scale Distribution

```{r}
mhc_complete <-
  mhc_calc %>%
  composite_total_avg_fun(
    id = 'id',
    max_value = 5,
    n_items = 14
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  subscale_create(
    total_only = FALSE,
    scale1 = c("h1", "h2", "h3"),
    scale1_nitems = 3,
    scale2 = c("h4", "h5", "h6", "h7", "h8"),
    scale2_nitems = 5,
    scale3 = c("h9", "h10", "h11", "h12", "h13", "h14"),
    scale3_nitems = 6
  ) %>%
  rename(
    mhc_total = sum_values,
    mhc_avg = mean_values,
    mhc_pa_total = total1,
    mhc_pa_avg = avg1,
    mhc_swb_total = total2,
    mhc_swb_avg = avg2,
    mhc_pwb_total = total3,
    mhc_pwb_avg = avg3
  ) %>%
  mutate(
    across(
      c(
        mhc_total,
        mhc_avg,
        mhc_pa_total,
        mhc_pa_avg,
        mhc_swb_total,
        mhc_swb_avg,
        mhc_pwb_total,
        mhc_pwb_avg
      ),
      ~case_when(
        id %in% mhc_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

mhc_complete <- mhc_complete %>%
  pivot_longer(
    h4:h14,
    names_to = "pre_flourish",
    values_to = "flourish_feel"
  ) %>%
  mutate(
    flourish = case_when(
      flourish_feel %in% c(4, 5) ~ 1,
      !flourish_feel %in% c(4, 5) ~ 0,
      TRUE ~ 0
    ),
    languish = case_when(
      flourish_feel %in% c(0, 1) ~ 1,
      !flourish_feel %in% c(0, 1) ~ 0,
      TRUE ~ 0
    )
  ) %>%
  group_by(id) %>%
  mutate(
    six_or_over = sum(flourish, na.rm = TRUE),
    neg_six_or_more = sum(languish, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    flourish_diagnosis = case_when(
      (h1 %in% c(4, 5) & six_or_over >= 6) |
        (h2 %in% c(4, 5) & six_or_over >= 6) |
        (h3 %in% c(4, 5) & six_or_over >= 6)
      ~ "flourish",
      TRUE ~ "not_flourish"
    ),
    languish_diagnosis = case_when(
      (h1 %in% c(0, 1) & neg_six_or_more >= 6) |
        (h2 %in% c(0, 1) & neg_six_or_more >= 6) |
        (h3 %in% c(0, 1) & neg_six_or_more >= 6)
      ~ "languish",
      TRUE ~ "not_languish"
    )
  ) %>%
  pivot_wider(
    names_from = pre_flourish,
    values_from = flourish_feel
  ) %>%
  distinct(
    id,
    .keep_all = TRUE
  ) %>%
  mutate(
    final_diagnosis = case_when(
      (flourish_diagnosis == "flourish" &
         languish_diagnosis == "not_languish") ~ "flourish",
      (flourish_diagnosis == "not_flourish" &
         languish_diagnosis == "languish") ~ "languish",
      (flourish_diagnosis == "not_flourish" &
         languish_diagnosis == "not_languish") ~ "moderately mentally healthy"
    )
  )

mhc_complete %>%
  composite_hist(
    x = mhc_total
  ) +
  labs(title = 'Distribution of Total Scores for MHC-SF Measure')

mhc_complete %>%
  composite_hist(
    x = mhc_pa_total
  ) +
  labs(title = 'Distribution of Total Scores for MHC-SF Positive Affect Subscale')

mhc_complete %>%
  composite_hist(
    x = mhc_swb_total
  ) +
  labs(title = 'Distribution of Total Scores for MHC-SF Social Well-being Subscale')

mhc_complete %>%
  composite_hist(
    x = mhc_pwb_total
  ) +
  labs(title = 'Distribution of Total Scores for MHC-SF Psychological Well-being Subscale')
```

### MHC-SF Categorical Diagnosis

```{r}
mhc_complete %>% 
  ggplot(
    aes(
      final_diagnosis
    )
  ) +
  geom_bar(
    aes(
      fill = final_diagnosis
    )
  ) +
  labs(
    x = "",
    y = "Count",
    title = "Counts for the Three Categorical\n Diagnoses for the MHC-SF"
  ) +
  theme(
    legend.position = "none"
  )
```

### MHC-SF Internal Reliability

```{r}
mhc_alpha <-
  mhc_complete %>%
  select(h1:h14) %>%
  psych::alpha(check.keys = TRUE)

mhc_pa_alpha <-
  mhc_complete %>%
  select(h1:h3) %>%
  psych::alpha(check.keys = TRUE)

mhc_swb_alpha <-
  mhc_complete %>%
  select(h4:h8) %>%
  psych::alpha(check.keys = TRUE)

mhc_pwb_alpha <-
  mhc_complete %>%
  select(h9:h14) %>%
  psych::alpha(check.keys = TRUE)

mhc_alpha_table <-
  tibble(
  Scale = c('MHC-SF',
            'MHC-SF - Positive Affect',
            'MHC-SF - Social Well-being',
            'MHC-SF - Psychological well-being'),
  Alpha = c(round(mhc_alpha$total$raw_alpha, 3),
            round(mhc_pa_alpha$total$raw_alpha, 3),
            round(mhc_swb_alpha$total$raw_alpha, 3),
            round(mhc_pwb_alpha$total$raw_alpha, 3))
)

mhc_alpha_table %>%
  gt::gt() %>%
  gt::tab_header(
    title = 'Alpha Values for MHC-SF Entire Scale & Subscales'
  )
```

## Flourishing Index

```{r}
flo <- no_bio %>%
  select(
    id,
    i1:i12
  ) %>%
  subtract_scale(
    id = "id",
    value = 1
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 11 ~ -77,
        .x == 12 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

flo_calc <-
  flo %>%
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### Flourishing Index Description

-   Variables in Flourishing Index

    -   `i1`, `i2`, `i3`, `i4`, `i5`, `i6`, `i7`, `i8`, `i9`, `i10`, `i11`, `i12`

-   Variable Scale

    -   0 - "Not Satisfied At All"

    -   1

    -   2

    -   3

    -   4

    -   5

    -   6

    -   7

    -   8

    -   9

    -   10 - "Completely Satisfied"

-   Missing Data Rule:

    -   Applied. Calculations were completed only with participants that had less than 20% missing data (this includes `-77` responses).

-   Reference: @vanderweele2017promotion

    -   \[Link here\](https://www.pnas.org/doi/abs/10.1073/pnas.1702996114)

    -   \[DOI here\](**https://doi.org/10.1073/pnas.1702996114**)

### Flourishing Index Missing Data

```{r}
flo_miss <- flo %>%
  pct_miss_fun(
    id = "id",
    n_items = 12
  )

flo_miss %>%
  gt::gt() %>%
  gt::tab_header(title = 'Missing Data',
                 subtitle = 'By Each Participant')

flo_remove <- flo_miss %>% filter(miss_pct >= 20) %>% pull(id)
```

### Flourishing Index Scale Distribution

```{r}
flo_complete <-
  flo_calc %>%
  composite_total_avg_fun(
    id = 'id',
    max_value = 10,
    n_items = 12
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  select(
    -mean_values
  ) %>%
  rename(flo_total = sum_values) %>%
  mutate(
    across(
      c(
        flo_total
      ),
      ~case_when(
        id %in% flo_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

flo_complete %>%
  composite_hist(
    x = flo_total
  ) +
  labs(title = 'Distribution of Total Scores for Flourishing Index')
```

### Flourishing Index Internal Reliability

```{r}
flo_alpha <- flo_complete %>% 
  select(i1:i12) %>% 
  psych::alpha(check.keys = TRUE)

flo_alpha_table <- 
  tibble(
    Scale = c('Flourishing Indes'),
    Alpha = c(round(flo_alpha$total$raw_alpha, 3))
  )

flo_alpha_table %>% 
  gt::gt() %>% 
  gt::tab_header(
    title = 'Alpha Values for Flourishing Index'
  )
```

## ITQ

```{r}
itq <- no_bio %>% 
  select(
    id,
    matches(
      "^itq"
    )
  ) %>% 
  subtract_scale(
    id = "id",
    value = 1
  ) %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == 5 ~ -77,
        .x == 6 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

itq_calc <- itq %>% 
  mutate(
    across(
      .cols = -id,
      .fns = ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

itq_calc <- itq_calc %>%
  mutate(
    itq_ad_dx = case_when(
      (itq1 > 2 | itq2 > 2) &
        (itq7 > 2 | itq8 > 2 | itq9 > 2) ~ "diagnosis_met",
      (itq1 <= 2 | itq2 <= 2) &
        (itq7 <= 2 | itq8 <= 2 | itq9 <= 2) ~ "diagnosis_not_met",
      TRUE ~ "conditions_not_met"
    ),
    itq_nsc_dx = case_when(
      (itq3 > 2 | itq4 > 2) &
        (itq7 > 2 | itq8 > 2 | itq9 > 2) ~ "diagnosis_met",
      (itq3 <= 2 | itq4 <= 2) &
        (itq7 <= 2 | itq8 <= 2 | itq9 <= 2) ~ "diagnosis_not_met",
      TRUE ~ "conditions_not_met"
    ),
    itq_dr_dx = case_when(
      (itq5 > 2 | itq6 > 2) &
        (itq7 > 2 | itq8 > 2 | itq9 > 2) ~ "diagnosis_met",
      (itq5 <= 2 | itq6 <= 2) &
        (itq7 <= 2 | itq8 <= 2 | itq9 <= 2) ~ "diagnosis_not_met",
      TRUE ~ "conditions_not_met"
    ),
    itq_dso_dx = case_when(
      (itq_ad_dx == "diagnosis_met" &
         itq_nsc_dx == "diagnosis_met" &
         itq_dr_dx == "diagnosis_met") ~ "diagnosis_met",
      TRUE ~ "diagnosis_not_met"
    )
  )
```

### ITQ Description

-   Variables for ITQ Scale

    -   `itq1`, `itq2`, `itq3`, `itq4`, `itq5`, `itq6`, `itq7`, `itq8`, `itq9`

-   Variable Scale

    -   0 - "Not at all"

    -   1 - "A little bit"

    -   2 - "Moderately"

    -   3 - "Quite a bit"

    -   4 - "Extremely"

-   Reverse Scoring

    -   N/A

-   Subscales

    -   Affective Dysregulation Subscale

        -   `itq1`, `itq2`

    -   Negative Self-Concept Subscale

        -   `itq3`, `itq4`

    -   Disturbances in Relationships Subscale

        -   `itq5`, `itq6`

    -   DSO Subscale

-   Reference: @cloitre2018international

    -   \[Link here\](https://onlinelibrary.wiley.com/doi/full/10.1111/acps.12956?casa_token=K4GIoIIYOkwAAAAA%3ABuaGU3cOQZwsFiM78FxHp_PHTQXDc72xABnVp8nlMCYRCHzf4c0oOMropyrzVjdClA3pFA-m01heootZ)

    -   \[DOI here\](**https://doi.org/10.1111/acps.12956**)

### ITQ Missing Data

```{r}
itq_miss <- itq %>%
  pct_miss_fun(
    id = "id",
    n_items = 9
  )

itq_miss %>%
  gt::gt() %>%
  gt::tab_header(title = 'Missing Data',
                 subtitle = 'By Each Participant')

itq_remove <- itq_miss %>% filter(miss_pct >= 20) %>% pull(id)
```

```{r}
itq_complete <-
  itq_calc %>%
  subscale_create(
    total_only = TRUE,
    scale1 = c("itq1", "itq2"),
    scale2 = c("itq3", "itq4"),
    scale3 = c("itq5", "itq6")
  ) %>%
  rename(
    itq_ad_total = total1,
    itq_nsc_total = total2,
    itq_dr_total = total3
  ) %>%
  mutate(
    itq_dso = (itq_ad_total + itq_nsc_total + itq_dr_total),
    across(
      c(
        itq_ad_total,
        itq_nsc_total,
        itq_dr_total
      )
      # ~case_when(
        # id %in% itq_remove ~ NA_real_,
        # TRUE ~ .x
      # )
    )
  )

itq_complete %>%
  composite_hist(
    x = itq_ad_total,
    bins = 15
  ) +
  labs(title = "Distribution of Total Scores for the Affective Dysregulation Subscale\nin the International Trauma Questionnaire")

itq_complete %>%
  composite_hist(
    x = itq_nsc_total,
    bins = 15
  ) +
  labs(title = "Distribution of Total Scores for the Negative Self-Concept Subscale\nin the International Trauma Questionnaire")

itq_complete %>%
  composite_hist(
    x = itq_dr_total,
    bins = 15
  ) +
  labs(title = "Distribution of Total Scores for the Disturbances in Relationships Subscale\nin the International Trauma Questionnaire")


itq_complete %>%
  composite_hist(
    x = itq_dso,
    bins = 15
  ) +
  labs(title = "Distribution of Total Scores for the DSO Subscale\nin the International Trauma Questionnaire")
```

## Sexual History Survey

### Sexual History Survey Description

-   Variables for Sexual History Survey

    -   `s1` to `s48`

-   Reverse Scoring

    -   N/A

-   Subscales

    -   N/A

```{r}
sex <- no_bio %>% 
  select(
    id,
    s_pregnancy_screen:s48
  )

sex_calc <- sex %>%
  mutate(
    sex_preg_screen = case_when(
      s_pregnancy_screen == 1 ~ "Yes",
      s_pregnancy_screen == 2 ~ "No",
      TRUE ~ NA_character_
    ),
    sex_current_date = case_when(
      s1 == 1 ~ "Yes",
      s1 == 2 ~ "No",
      s1 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_part_gender_id = case_when(
      s1a == 1 ~ "cisgender female",
      s1a == 2 ~ "female",
      s1a == 3 ~ "cisgender male",
      s1a == 4 ~ "male",
      s1a == 5 ~ "trans female",
      s1a == 6 ~ "tras male",
      s1a == 7 ~ "non-binary",
      s1a == 8 ~ "self-identify",
      s1a == 9 ~ NA_character_,
      s1a == 10 ~ NA_character_,
      TRUE ~ NA_character_
    ),
    sex_current_engage = case_when(
      s3 == 1 ~ "Yes",
      s3 == 2 ~ "No",
      s3 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_current_live = case_when(
      s4 == 1 ~ "Yes",
      s4 == 2 ~ "No",
      s4 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_current_marry = case_when(
      s6 == 1 ~ "Yes",
      s6 == 2 ~ "No",
      s6 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_pressure_stress = case_when(
      s9 == 1 ~ "a great deal",
      s9 == 2 ~ "quite a lot",
      s9 == 3 ~ "some",
      s9 == 4 ~ "not much",
      s9 == 5 ~ "very little",
      s9 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_id_feeling = case_when(
      s10 == 1 ~ "heterosexual",
      s10 == 2 ~ "gay_lesbian",
      s10 == 3 ~ "bisexual",
      s10 == 4 ~ "Other",
      s10 == 5 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_talk_safesex = case_when(
      s11 == 1 ~ "Never",
      s11 == 2 ~ "Rarely",
      s11 == 3 ~ "Sometimes",
      s11 == 4 ~ "Often",
      s11 == 5 ~ "Very Often",
      s11 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_talk_comfort = case_when(
      s12 == 1 ~ "Very Comfortable",
      s12 == 2 ~ "Somewhat Comfortable",
      s12 == 3 ~ "Neutral",
      s12 == 4 ~ "Somewhat uncomfortable",
      s12 == 5 ~ "Very uncomfortable",
      s12 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_other_safesex = case_when(
      s13 == 1 ~ "Yes",
      s13 == 2 ~ "No",
      s13 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_other_person_safesex = case_when(
      s14 == 1 ~ "Friend",
      s14 == 2 ~ "Romantic Partner",
      s14 == 3 ~ "Sister/Brother",
      s14 == 4 ~ "Other Relative",
      s14 == 5 ~ "Counselor/Teacher/Doctor",
      s14 == 6 ~ "Parent",
      s14 == 7 ~ "Other",
      s14 == 8 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_talk_safesex_other_person = case_when(
      s16 == 1 ~ "Never",
      s16 == 2 ~ "Rarely",
      s16 == 3 ~ "Sometimes",
      s16 == 4 ~ "Often",
      s16 == 5 ~ "Very Often",
      s16 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_talk_comfort_other_person = case_when(
      s17 == 1 ~ "Very Comfortable",
      s17 == 2 ~ "Somewhat Comfortable",
      s17 == 3 ~ "Neutral",
      s17 == 4 ~ "Somewhat uncomfortable",
      s17 == 5 ~ "Very uncomfortable",
      s17 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_birthcontrol_sex_with = case_when(
      s18 == 1 ~ "Very Comfortable",
      s18 == 2 ~ "Somewhat Comfortable",
      s18 == 3 ~ "Neutral",
      s18 == 4 ~ "Somewhat Uncomfortable",
      s18 == 5 ~ "Very Uncomfortable",
      s18 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_safesex_sex_with = case_when(
      s19 == 1 ~ "Very Comfortable",
      s19 == 2 ~ "Somewhat Comfortable",
      s19 == 3 ~ "Neutral",
      s19 == 4 ~ "Somewhat Uncomfortable",
      s19 == 5 ~ "Very Uncomfortable",
      s19 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_confident_condom = case_when(
      s20 == 1 ~ "Very confident",
      s20 == 2 ~ "Somewhat confident",
      s20 == 3 ~ "A little confident",
      s20 == 4 ~ "Not at all confident",
      s20 == 5 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_further_sexually = case_when(
      s21 == 1 ~ "Always or almost always",
      s21 == 2 ~ "Often",
      s21 == 3 ~ "About  half the time",
      s21 == 4 ~ "Occasionally",
      s21 == 5 ~ "Never or almost never",
      s21 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_std = case_when(
      s22 == 1 ~ "Yes",
      s22 == 2 ~ "No",
      s22 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_check_out = case_when(
      s23 == 1 ~ "Yes",
      s23 == 2 ~ "No",
      s23 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_std_happen = case_when(
      s24 == 1 ~ "Yes, I had a std (positive diagnosis)",
      s24 == 2 ~ "No STD (negative diagnosis)",
      s24 == 3 ~ "Don't know yet; waiting for results",
      s24 == 4 ~ "Decline",
      TRUE ~ NA_character_
    ),
    across(
      c(
        s25_1, s25_2, s25_3, s25_4, s25_5,
        s25_6, s25_7, s25_8, s25_9, s25_77
      ),
      ~case_when(
        is.na(.x) ~ NA_character_,
        TRUE ~ "Yes"
      )
    ),
    sex_bloodtest_hiv = case_when(
      s26 == 1 ~ "Yes",
      s26 == 2 ~ "No",
      s26 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_might_be_preg = case_when(
      s28 == 1 ~ "Yes",
      s28 == 2 ~ "No",
      s28 == 3 ~ "Decline",
      s28 == 4 ~ "Pregnant prior to last 6 months; knew pregnant prior to 6 month period",
      TRUE ~ NA_character_
    ),
    sex_preg_what_happen = case_when(
      s29 == 1 ~ "Went to dr; positive diagnosis",
      s29 == 2 ~ "Went to dr; negative diagnosis",
      s29 == 3 ~ "Went to dr; don't know",
      s29 == 4 ~ "Took home test; positive",
      s29 == 5 ~ "Took home test; negative",
      s29 == 6 ~ "Took home test; don't know",
      s29 == 7 ~ "Did nothing; period started",
      s29 == 8 ~ "Did nothing, don't know",
      s29 == 9 ~ "Decline",
      TRUE ~ NA_character_
    ),
    across(
      c(
        s32_1, s32_2, s32_3, s32_4, s32_5,
        s32_6, s32_7, s32_8, s32_9, s32_77
      ),
      ~case_when(
        is.na(.x) ~ NA_character_,
        TRUE ~ "Yes"
      )
    ),
    sex_safesex_prev_std = case_when(
      s33 == 1 ~ "Always or almost always",
      s33 == 2 ~ "Often",
      s33 == 3 ~ "About half the time",
      s33 == 4 ~ "Occasionally",
      s33 == 5 ~ "Never or almost never",
      s33 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_percent_sex_relation_safesex_prev_std = case_when(
      s34 == 1 ~ "Never 0%",
      s34 == 2 ~ "Rarely 1-15%",
      s34 == 3 ~ "Occasionally 15-40%",
      s34 == 4 ~ "About half the time 40-60%",
      s34 == 5 ~ "Usually 60-85%",
      s34 == 6 ~ "Most of the time 85-99%",
      s34 == 7 ~ "Every single time 100%",
      s34 == 8 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_sex_relation_justmet = case_when(
      s35 == 1 ~ "Yes",
      s35 == 2 ~ "No",
      s35 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_alcohol_sex_relation = case_when(
      s36 == 1 ~ "Always or almost always",
      s36 == 2 ~ "Often",
      s36 == 3 ~ "About half the time",
      s36 == 4 ~ "Occasionally",
      s36 == 5 ~ "Never or almost never",
      s36 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_cannabis_drugs_sex_relation = case_when(
      s37 == 1 ~ "Always or almost always",
      s37 == 2 ~ "Often",
      s37 == 3 ~ "About half the time",
      s37 == 4 ~ "Occasionally",
      s37 == 5 ~ "Never or almost never",
      s37 == 6 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_sex_relation_w_injects = case_when(
      s38 == 1 ~ "Yes",
      s38 == 2 ~ "No",
      s38 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_intercourse_male_partner = case_when(
      s39 == 1 ~ "Yes",
      s39 == 2 ~ "No",
      s39 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_intercourse_male_nocondom = case_when(
      s40 == 1 ~ "Yes",
      s40 == 2 ~ "No",
      s40 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_percent_w_male_use_birthcontrol = case_when(
      s43 == 1 ~ "Never 0%",
      s43 == 2 ~ "Rarely 1-15%",
      s43 == 3 ~ "Occasionally 15-40%",
      s43 == 4 ~ "About half the time 40-60%",
      s43 == 5 ~ "Usually 60-85%",
      s43 == 6 ~ "Most of the time 85-99%",
      s43 == 7 ~ "Every single time 100%",
      s43 == 8 ~ "Decline",
      s43 == 9 ~ "Don't know",
      s43 == 10 ~ "Not using birth control; currently pregnant",
      TRUE ~ NA_character_
    ),
    sex_intercourse_female_partner = case_when(
      s44 == 1 ~ "Yes",
      s44 == 2 ~ "No",
      s44 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_oralsex_female_partner = case_when(
      s45 == 1 ~ "Yes",
      s45 == 2 ~ "No",
      s45 == 3 ~ "Decline",
      TRUE ~ NA_character_
    ),
    sex_oralsex_dentaldam_female_partner = case_when(
      s46 == 1 ~ "Yes, had oral sex without dental dam",
      s46 == 2 ~ "No, oral sex and always used dental dam",
      s46 == 3 ~ "Decline",
      TRUE ~ NA_character_
    )
  ) %>%
  rename(
    sex_start_see_part = s2,
    sex_been_together_yr = s2a,
    sex_been_together_mth = s2b,
    sex_been_together_day = s2c,
    sex_movein_date = s5,
    sex_live_together_yr = s5a,
    sex_live_together_mth = s5b,
    sex_live_together_day = s5c,
    sex_marry_date = s7,
    sex_part_age = s8,
    sex_id_feeling_text = s10_4_text,
    sex_other_person_text = s14_8_text,
    sex_other_person_age = s15,
    sex_std_herpes_diag = s25_1,
    sex_std_warts_diag = s25_2,
    sex_std_aids_hiv_diag = s25_3,
    sex_std_hepb_diag = s25_4,
    sex_std_gonorrhea_diag = s25_5,
    sex_std_syphilis_diag = s25_6,
    sex_std_chlamydia_diag = s25_7,
    sex_std_other_diag = s25_8,
    sex_std_dontremember = s25_9,
    sex_std_decline = s25_77,
    sex_std_diag_text = s25_8_text,
    sex_bloodtest_hiv_times = s27,
    sex_sex_relations_times = s30,
    sex_number_different_people = s31,
    sex_partner_male_sameage = s32_1,
    sex_partner_male_1to2_older = s32_2,
    sex_partner_male_more2_older = s32_3,
    sex_partner_female_sameage = s32_4,
    sex_partner_female_1to2_older = s32_5,
    sex_partner_female_more2_older = s32_6,
    sex_partner_nonbinary_sameage = s32_7,
    sex_partner_nonbinary_1to2_older = s32_8,
    sex_partner_nonbinary_more2_older = s32_9,
    sex_partner_decline = s32_77,
    sex_intercourse_male_nocondom_times = s41,
    sex_intercourse_male_nocondom_number_partner = s41,
    sex_oralsex_dentaldam_times = s47,
    sex_oralsex_dentaldam_number_parnter = s48
  )
```

## Rand Health Survey SF-12

```{r}
# helpful links
# sf12 code/scoring: https://labs.dgsom.ucla.edu/hays/pages/programs_utilities
# sf articles: https://www.physio-pedia.com/12-Item_Short_Form_Survey_(SF-12)
# sf12 reliability/validity: A 12-Item Short-Form Health Survey: Construction of Scales and Preliminary Tests of Reliability and Validity (Ware, Jr. et al. 1996)
sf12 <- bio %>%
  select(
    id,
    r1:r12
  ) %>%
  mutate(
    r1 = case_when(
      r1 == 5 ~ 1,
      r1 == 4 ~ 2,
      r1 == 3 ~ 3,
      r1 == 2 ~ 4,
      r1 == 1 ~ 5,
      r1 == 6 ~ -77,
      TRUE ~ NA_real_
    ),
    across(
      c(r2:r8),
      ~case_when(
        .x == 1 ~ 1,
        .x == 2 ~ 0,
        .x == 3 ~ -77,
        TRUE ~ NA_real_
      )
    ),
    across(
      c(r9:r12),
      ~case_when(
        .x == 1 ~ 5,
        .x == 2 ~ 4,
        .x == 3 ~ 3,
        .x == 4 ~ 2,
        .x == 5 ~ 1,
        .x == 6 ~ -77,
        TRUE ~ NA_real_
      )
    )
  ) %>%
  rename(
    r2a = r2,
    r2b = r3,
    r3a = r4,
    r3b = r5,
    r4a = r6,
    r4b = r7,
    r5 = r8,
    r6a = r9,
    r6b = r10,
    r6c = r11,
    r7 = r12
  )

sf12_calc <- sf12 %>%
  mutate(
    across(
      -id,
      ~case_when(
        .x == -77 ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

### SF-12 Description

-   Variables for SF-12scale

    -   `r1`, `r2a`, `r2b`, `r3a`, `r3b`, `r4a`, `r4b`, `r5`, `r6a`, `r6b`, `r6c`, `r7`

-   Variable Scale

    -   `r1`

        -   1 - "Excellent"

        -   2 - "Very Good"

        -   3 - "Good"

        -   4 - "Fair"

        -   5 - "Poor"

    -   `r2a`, `r2b`, `r3a`, `r3b`, `r4a`, `r4b`, `r5`

        -   1 - "Yes"

        -   0 - "No"

    -   `r6a`, `r6b`, `r6c`, `r7`

        -   1 - "Definitely true"

        -   2 - "Mostly true"

        -   3 - "Don't know"

        -   4 - "Mostly false"

        -   5 - "Definitely false"

-   Total scores should range from 0 to 8

-   Reverse Scoring

    -   `r1`

        -   5 - "Excellent"

        -   4 - "Very Good"

        -   3 - "Good"

        -   2 - "Fair"

        -   1 - "Poor"

    -   `r6a`, `r6b`, `r6c`, `r7` were reverse coded

    <!-- -->

        -   5 - "Definitely true"

        -   4 - "Mostly true"

        -   3 - "Don't know"

        -   2 - "Mostly false"

        -   1 - "Definitely false"

-   Subscales

    -   N/A

-   Missing Data Rule

    -   Applied. Calculations were completed only with participants that had less than 30% missing data (this includes `-77` responses)

-   Reference: @ware199612

    -   \[Link here\](https://www.jstor.org/stable/3766749)

```{r}
sf12_miss <- sf12_calc %>%
  pct_miss_fun(
    id = "id",
    n_items = 12
  )

sf12_miss %>%
  gt::gt() %>%
  gt::tab_header(title = 'Missing Data',
                 subtitle = 'By Each Participant')

sf12_remove <- sf12_miss %>% filter(miss_pct >= 20) %>% pull(id)
```

```{r}
sf12_complete <- sf12_calc %>%
  mutate(
    sf_gh_total_v2 = case_when(
      r1 == 1 ~ 1,
      r1 == 2 ~ 2,
      r1 == 3 ~ 3.4,
      r1 == 4 ~ 4.4,
      r1 == 5 ~ 5,
      TRUE ~ NA_real_
    ),
    sf_pf_total = r2a + r2b,
    sf_rp_total = r3a + r3b,
    sf_re_total = r4a + r4b,
    sf_mh_total = r6a + r6c,
    sf_bp_total = r5,
    sf_vt_total = r6b,
    sf_sf_total = r7,
    sf_pf_total_v2 = (100*(sf_pf_total - 2))/4,
    sf_rp_total_v2 = (100*(sf_rp_total - 2))/8,
    sf_re_total_v2 = (100*(sf_re_total - 2))/8,
    sf_mh_total_v2 = (100*(sf_mh_total - 2))/8,
    sf_bp_total_v2 = (100*(sf_bp_total - 1))/4,
    sf_vt_total_v2 = (100*(sf_vt_total - 1))/4,
    sf_sf_total_v2 = (100*(sf_sf_total - 1))/4,
    across(
      c(
        sf_gh_total_v2,
        sf_pf_total,
        sf_rp_total,
        sf_re_total,
        sf_mh_total,
        sf_bp_total,
        sf_vt_total,
        sf_sf_total,
        sf_pf_total_v2,
        sf_rp_total_v2,
        sf_re_total_v2,
        sf_mh_total_v2,
        sf_bp_total_v2,
        sf_vt_total_v2,
        sf_sf_total_v2
      ),
      ~case_when(
        id %in% sf12_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )
```

## CINT

```{r}
cint <- no_bio %>%
  select(
    id,
    pct0:pct3e
  ) %>%
  mutate(
    pct0 = case_when(
      pct0 == 1 ~ "Yes",
      pct0 == 2 ~ "No",
      TRUE ~ NA_character_
    ),
    across(
      c(
        pct1:pct2d,
        pct3a:pct3d
      ),
      ~case_when(
        .x == 1 ~ 1,
        .x == 2 ~ 0,
        .x == 3 ~ -77,
        TRUE ~ NA_real_
      )
    )
  )

cint_calc <- cint %>%
  mutate(
    across(
        -c(id, pct0, pct1, pct2e, pct3e),
        ~case_when(
          .x == -77 ~ NA_real_,
          TRUE ~ .x
        )
    )
  )
```

### CINT Description

-   Variables for CINT scale

    -   `pct0`, `pct1`, `pct2a`, `pct2b`, `pct2c`, `pct2d`, `pct2e`, `pct3a`, `pct3b`, `pct3c`, `pct3d`, `pct3e`

-   Variable Scale

    -   `pct0`, `pct1`, `pct2a`, `pct2b`, `pct2c`, `pct2d`, `pct3a`, `pct3b`, `pct3c`, `pct3d`

        -   1 - "Yes'

        -   0 - "No"

-   Total scores should range from 0 to 8

-   Reverse Scoring

    -   N/A

-   Subscales

    -   N/A

-   Missing Data Rule

    -   Applied. Calculations were completed only with participants that had less than 30% missing data (this includes `-77` responses)

-   Reference:

    -   \[Link here\]()

    -   \[DOI here\]()

### CINT Missing Data

```{r}
cint_miss <- cint_calc %>%
  pct_miss_fun(
    id = c(
      "id",
      "pct0",
      "pct1",
      "pct2e",
      "pct3e"
    ),
    n_items = 8
  )

cint_miss %>%
  gt::gt() %>%
  gt::tab_header(
    title = "Missing Data",
    subtitle = "By Each Participant"
  )

cint_remove <- cint_miss %>% filter(miss_pct >= 30) %>% pull(id)
```

### CINT Scale & Subscale Distributions

```{r}
cint_complete <- cint_calc %>%
  composite_total_avg_fun(
    id = c(
      "id",
      "pct0",
      "pct1",
      "pct2e",
      "pct3e"
    ),
    max_value = 1,
    n_items = 8
  ) %>%
  distinct(
    across(
      .cols = everything()
    )
  ) %>%
  select(
    -mean_values
  ) %>%
  rename(
    cint_total = sum_values
    ) %>%
  mutate(
    across(
      c(
        cint_total
      ),
      ~case_when(
        id %in% cint_remove ~ NA_real_,
        TRUE ~ .x
      )
    )
  )

cint_complete %>%
  composite_hist(
    x = cint_total,
    bins = 10
  ) +
  labs(
    title = "Distribution of Total Scores for the CINT"
  )
```

### CINT Internal Reliability
